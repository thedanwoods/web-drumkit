{"version":3,"sources":["sequencer/index.js","components/PlayButton/index.jsx","components/TempoSlider/index.jsx","components/DrumGrid/index.jsx","components/AddInstrument/index.jsx","components/Spinner/index.jsx","components/InstrumentOption/index.jsx","components/KitOption/index.jsx","utils/instrumentsList.js","components/InstrumentSelector/index.jsx","components/About/index.jsx","components/Footer/index.jsx","App.jsx","serviceWorker.js","index.js"],"names":["updateTempo","tempo","Tone","Transport","bpm","value","drumPlayers","Players","toMaster","playSound","name","get","start","playButton","_ref","playing","play","react_default","a","createElement","Fragment","className","type","onClick","md","size","TempoSlider","onchange","min","max","onChange","DrumPad","setPad","cursor","_useState","useState","_useState2","Object","slicedToArray","box","setBox","id","checked","e","target","concat","DrumGrid","_ref2","sound","remove","_useState3","_useState4","seq","setSeq","_useState5","Array","fill","_useState6","pads","setPads","_useState7","_useState8","position","setPosition","_useState9","_useState10","loaded","setLoaded","cb","pos","split","getTransportPosition","useEffect","has","add","url","newSequence","callback","arguments","length","undefined","Sequence","time","note","notes","includes","sequence","dispose","displayName","toUpperCase","map","pad","index","DrumGrid_DrumPad","key","n","toConsumableArray","slice","setSinglePad","at","AddInstrument","Spinner","InstrumentOption","onAdd","setPlaying","components_Spinner","KitOption","instrumentsList","originalList","instruments","instrument","objectSpread","process","fetchInstruments","modalStyles","content","left","top","right","bottom","padding","transform","width","maxWidth","backgroundColor","color","border","overflow","overlay","InstrumentSelector","cancel","tab","setTab","lib_default","isOpen","style","contentLabel","filter","item","self","findIndex","t","kit","components_KitOption","components_InstrumentOption","maxHeight","About","href","rel","Footer","aboutOpen","setAboutOpen","components_About","Modal","setAppElement","App","addInstrumentOpen","setAddInstrumentOpen","currentTempo","setCurrentTempo","setInstruments","removeInstrument","newInstrumentsList","components_InstrumentSelector","activateInstrument","activateKit","PlayButton","text","stop","components_TempoSlider","components_DrumGrid","components_AddInstrument","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.63a852a4.chunk.js","sourcesContent":["import Tone from 'tone';\r\n\r\nexport const updateTempo = tempo => {\r\n  Tone.Transport.bpm.value = tempo;\r\n};\r\n\r\nexport const startPlaying = () => {\r\n  Tone.Transport.start();\r\n};\r\n\r\nexport const stopPlaying = () => {\r\n  Tone.Transport.stop();\r\n};\r\n\r\nexport const getTransportPosition = () => {\r\n  const pos = Tone.Transport.position.split('.')[0].split(':');\r\n  return pos[1] * 4 + +pos[2];\r\n};\r\n\r\n// Initialise empty sample player\r\nexport const drumPlayers = new Tone.Players({}).toMaster();\r\n\r\n// Fire a sound from the sample player\r\nexport const playSound = name => drumPlayers.get(name).start();\r\n\r\nexport const sequence = (sound, callback = () => {}) =>\r\n  new Tone.Sequence(\r\n    (time, note) => {\r\n      if (note.notes.includes(1)) {\r\n        drumPlayers.get(sound.name).start();\r\n      }\r\n      callback();\r\n    },\r\n    new Array(16).fill({ notes: [] }),\r\n    '16n',\r\n  );\r\n","import React from 'react';\r\nimport { MdStop, MdPlayArrow } from 'react-icons/md';\r\n\r\nimport './play-button.css';\r\n\r\nconst playButton = ({ playing, play }) => (\r\n  <>\r\n    <button className=\"play-button\" type=\"button\" onClick={play}>\r\n      {playing ? <MdStop size={32} /> : <MdPlayArrow size={32} />}\r\n    </button>\r\n  </>\r\n);\r\n\r\nexport default playButton;\r\n","import React from 'react';\r\n\r\nimport './tempo-slider.css';\r\n\r\nconst TempoSlider = ({ tempo, onchange }) => (\r\n  <div className=\"tempo-slider\">\r\n    <div className=\"tempo-slider__slider\">\r\n      <input\r\n        type=\"range\"\r\n        min=\"40\"\r\n        max=\"240\"\r\n        value={tempo}\r\n        onChange={onchange}\r\n      />\r\n    </div>\r\n    <div className=\"tempo-slider__title\">{tempo} BPM</div>\r\n  </div>\r\n);\r\n\r\nexport default TempoSlider;\r\n","/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable jsx-a11y/label-has-for */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { sequence, drumPlayers, getTransportPosition } from '../../sequencer';\r\n\r\nimport './drum-grid.css';\r\n\r\n// Single pad\r\nconst DrumPad = ({ setPad, name, cursor }) => {\r\n  const [box, setBox] = useState(false);\r\n  return (\r\n    <div className=\"pad\">\r\n      <label className=\"pad__label\">\r\n        <input\r\n          id=\"name\"\r\n          className=\"pad__checkbox\"\r\n          type=\"checkbox\"\r\n          checked={box}\r\n          name={name}\r\n          onChange={e => {\r\n            setBox(e.target.checked);\r\n            setPad(e.target.checked);\r\n          }}\r\n        />\r\n        <div className={`pad__cover${cursor ? ' pad__cover--cursor' : ''}`} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\n/*\r\n * Set state of pad in pads array\r\n * n: Number. Position of the pad in the array of sixteenths\r\n * value: Boolean. True if there is a hit on this note.\r\n * pads: Array. e.g. [false, true, ...]\r\n * setPads: Setter function.\r\n */\r\nconst setSinglePad = (n, value, pads, setPads) => {\r\n  setPads([...pads.slice(0, n), value, ...pads.slice(n + 1)]);\r\n};\r\n\r\n//\r\nconst DrumGrid = ({ sound, remove }) => {\r\n  const [seq, setSeq] = useState();\r\n  const [pads, setPads] = useState(new Array(16).fill(false));\r\n  const [position, setPosition] = useState(0);\r\n  const [loaded, setLoaded] = useState(false);\r\n  // Callback to set the position in state every sixteenth\r\n  // Called in the sequencer event function\r\n  const cb = () => {\r\n    setPosition(getTransportPosition());\r\n  };\r\n\r\n  // On mount, we add the sound to the sequencer if it's not already there.\r\n  useEffect(() => {\r\n    if (!drumPlayers.has(sound.name)) {\r\n      drumPlayers.add(sound.name, sound.url, () => setLoaded(true));\r\n    } else {\r\n      setLoaded(true);\r\n    }\r\n  }, []);\r\n\r\n  // When we mount the component, we create a brand new empty sequence for the instrument.\r\n  useEffect(() => {\r\n    const newSequence = sequence(sound, () => {\r\n      cb();\r\n    }).start(0);\r\n\r\n    setSeq(newSequence);\r\n    return () => {\r\n      // Destroy sequence on unmount\r\n      newSequence.dispose();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"drum-grid\">\r\n      <div className=\"drum-grid__title\">\r\n        <div>{sound.displayName.toUpperCase()}</div>\r\n        {!loaded && <div>Loading...</div>}\r\n        <div>\r\n          <button\r\n            className=\"drum-grid__remove\"\r\n            type=\"button\"\r\n            onClick={() => remove(sound.name)}\r\n          >\r\n            &times;\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {loaded && pads.map((pad, index) => (\r\n        <DrumPad\r\n          name={index + 1}\r\n          key={index}\r\n          setPad={value => {\r\n            setSinglePad(index, value, pads, setPads);\r\n            seq.at(index, { notes: value === true ? [1] : [] });\r\n          }}\r\n          cursor={position === index}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrumGrid;\r\n","import React from 'react';\r\n\r\nimport './add-instrument.css';\r\n\r\nconst AddInstrument = ({ onClick }) => (\r\n  <div className=\"add-instrument__container\">\r\n    <div className=\"add-instrument\">\r\n      <div className=\"add-instrument__add\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={onClick}\r\n          className=\"add-instrument__button\"\r\n        >\r\n          <div className=\"add-instrument__text\">ADD</div>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default AddInstrument;\r\n","import React from 'react';\r\n\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => (\r\n  <div className=\"spinner\">\r\n    <div className=\"bounce1\" />\r\n    <div className=\"bounce2\" />\r\n    <div className=\"bounce3\" />\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { MdPlayArrow } from 'react-icons/md';\r\n\r\nimport Spinner from '../Spinner';\r\n\r\nimport { drumPlayers, playSound } from '../../sequencer';\r\n\r\nimport './instrument-option.css';\r\n\r\nconst InstrumentOption = ({ displayName, name, url, onAdd }) => {\r\n  const [playing, setPlaying] = useState('idle');\r\n  const handlePlay = () => {\r\n    if (playing === 'idle') {\r\n      setPlaying('cued');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (playing === 'cued') {\r\n      if (!drumPlayers.has(name)) {\r\n        drumPlayers.add(name, url, () => {\r\n          setPlaying('idle');\r\n          playSound(name);\r\n        });\r\n      } else {\r\n        playSound(name);\r\n        setPlaying('idle');\r\n      }\r\n    }\r\n  }, playing);\r\n\r\n  return (\r\n    <div className=\"instrument-option\">\r\n      <button\r\n        className=\"instrument-option__button\"\r\n        type=\"button\"\r\n        onClick={handlePlay}\r\n      >\r\n        {playing === 'idle' && <MdPlayArrow size={30} />}\r\n        {playing === 'cued' && <Spinner />}\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onClick={onAdd}\r\n        className=\"instrument-option instrument-option__button instrument-option__name\"\r\n      >\r\n        {displayName}\r\n      </button>\r\n      {/*\r\n    <button className=\"instrument-option__button\" type=\"button\" onClick={onAdd}>\r\n      <MdAdd size={24} />\r\n    </button>\r\n*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstrumentOption;\r\n","import React from 'react';\r\n\r\nimport './kit-option.css';\r\n\r\nconst KitOption = ({ name, onAdd }) => {\r\n  return (\r\n    <div className=\"instrument-option\">\r\n      <button\r\n        type=\"button\"\r\n        onClick={onAdd}\r\n        className=\"kit-option kit-option__button kit-option__name\"\r\n      >\r\n        {name}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KitOption;\r\n","import originalList from '../config/instrumentsList.json';\n\nconst instrumentsList = () => originalList.instruments.map(instrument => ({\n  ...instrument,\n  url: `${process.env.PUBLIC_URL}${instrument.url}`,\n}));\n\nexport default instrumentsList;\n","import React, { useState } from 'react';\r\n\r\nimport Modal from 'react-modal';\r\nimport InstrumentOption from '../InstrumentOption';\r\nimport KitOption from '../KitOption';\r\n\r\nimport fetchInstruments from '../../utils/instrumentsList';\r\n\r\nimport './instrument-selector.css';\r\n\r\nconst instruments = fetchInstruments();\r\n\r\nconst modalStyles = {\r\n  content: {\r\n    position: 'fixed',\r\n    left: '50%',\r\n    top: '5%',\r\n    right: 'auto',\r\n    bottom: '5%',\r\n    padding: '0',\r\n    transform: 'translate(-50%,0)',\r\n    width: '80%',\r\n    maxWidth: '30rem',\r\n    backgroundColor: '#333',\r\n    color: '#eee',\r\n    border: '3px solid #444',\r\n    overflow: 'hidden',\r\n  },\r\n  overlay: {\r\n    backgroundColor: 'rgba(32, 32, 32, 0.75)',\r\n  },\r\n};\r\n\r\nconst InstrumentSelector = ({ add, cancel }) => {\r\n  const [tab, setTab] = useState('instruments');\r\n  return (\r\n    <Modal isOpen style={modalStyles} contentLabel=\"Instrument Selector Modal\">\r\n      <div className=\"instrument-selector__title\">\r\n        <h1 className=\"instrument-selector__heading-text\">Add an instrument</h1>\r\n        <button\r\n          onClick={cancel}\r\n          type=\"button\"\r\n          className=\"instrument-selector__close\"\r\n        >\r\n          &times;\r\n        </button>\r\n      </div>\r\n      <div className=\"instrument-selector__tabs\">\r\n        <button\r\n          className={`instrument-selector__tab-button${\r\n            tab === 'instruments'\r\n              ? ' instrument-selector__tab-button--active'\r\n              : ''\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => setTab('instruments')}\r\n        >\r\n          Instruments\r\n        </button>\r\n        <button\r\n          className={`instrument-selector__tab-button${\r\n            tab === 'kits' ? ' instrument-selector__tab-button--active' : ''\r\n          }`}\r\n          type=\"button\"\r\n          onClick={() => setTab('kits')}\r\n        >\r\n          Kits\r\n        </button>\r\n      </div>\r\n      <div className=\"instrument-selector__list\">\r\n        {tab === 'kits' &&\r\n          instruments\r\n            .filter(\r\n              (item, index, self) =>\r\n                self.findIndex(t => t.kit === item.kit) === index,\r\n            )\r\n            .filter(instrument => instrument.kit && instrument.kit !== '')\r\n            .map(instrument => (\r\n              <KitOption\r\n                onAdd={() => add({ kit: instrument.kit })}\r\n                name={instrument.kit}\r\n                key={instrument.kit}\r\n              />\r\n            ))}\r\n        {tab === 'instruments' &&\r\n          instruments.map(instrument => (\r\n            <InstrumentOption\r\n              onAdd={() => add({ instrument: instrument.name })}\r\n              displayName={instrument.displayName}\r\n              name={instrument.name}\r\n              key={instrument.name}\r\n              url={instrument.url}\r\n            />\r\n          ))}\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default InstrumentSelector;\r\n","import React from 'react';\r\n\r\nimport Modal from 'react-modal';\r\n\r\nimport './about.css';\r\n\r\nconst modalStyles = {\r\n  content: {\r\n    position: 'fixed',\r\n    left: '50%',\r\n    top: '50%',\r\n    right: 'auto',\r\n    bottom: 'auto',\r\n    padding: '0',\r\n    transform: 'translate(-50%,-50%)',\r\n    width: '80%',\r\n    maxWidth: '30rem',\r\n    backgroundColor: '#333',\r\n    color: '#eee',\r\n    border: '3px solid #444',\r\n    overflow: 'auto',\r\n    maxHeight: '95vh',\r\n  },\r\n  overlay: {\r\n    backgroundColor: 'rgba(32, 32, 32, 0.75)',\r\n  },\r\n};\r\n\r\nconst About = ({ cancel }) => {\r\n  return (\r\n    <Modal isOpen style={modalStyles} contentLabel=\"About Modal\">\r\n      <div className=\"about__title\">\r\n        <h1 className=\"about__heading-text\">About</h1>\r\n        <button onClick={cancel} type=\"button\" className=\"about__close\">\r\n          &times;\r\n        </button>\r\n      </div>\r\n      <div className=\"about__content\">\r\n        <p>\r\n          This is an experimental drum sample sequencer created by{' '}\r\n          <a\r\n            href=\"https://github.com/thedanwoods\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            thedanwoods\r\n          </a>\r\n          .\r\n        </p>\r\n        <p>\r\n          It&apos;s designed to experiment with the capabilities of the Web\r\n          Audio API, which allows you to manipulate sounds in browsers. It uses\r\n          the fantastic{' '}\r\n          <a\r\n            href=\"https://tonejs.github.io/\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Tone.js\r\n          </a>{' '}\r\n          library by Yotam Mann.\r\n        </p>\r\n        <p>\r\n          I may add new features in the future, including a synth sequencer.\r\n        </p>\r\n        <p>\r\n          As it&apos;s a work in progress, it may be temperamental in some browsers,\r\n          especially at higher tempos on slower devices.\r\n        </p>\r\n        <p>\r\n          If you find it useful or fun, or have any suggestions, please{' '}\r\n          <a\r\n            href=\"https://twitter.com/TheDanWoods\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            let me know on twitter!\r\n          </a>\r\n        </p>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport About from '../About';\r\n\r\nimport './footer.css';\r\n\r\nconst Footer = () => {\r\n  const [aboutOpen, setAboutOpen] = useState(false);\r\n  return (\r\n    <div className=\"footer\">\r\n      {aboutOpen && (\r\n        <About cancel={() => setAboutOpen(false)} add={() => {}} />\r\n      )}\r\n\r\n      <div>\r\n        <button\r\n          onClick={() => {\r\n            setAboutOpen(true);\r\n          }}\r\n          type=\"button\"\r\n          className=\"footer__about\"\r\n        >\r\n          About\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { updateTempo, startPlaying, stopPlaying } from './sequencer';\r\nimport PlayButton from './components/PlayButton';\r\nimport TempoSlider from './components/TempoSlider';\r\nimport DrumGrid from './components/DrumGrid';\r\nimport AddInstrument from './components/AddInstrument';\r\nimport InstrumentSelector from './components/InstrumentSelector';\r\nimport Footer from './components/Footer';\r\n\r\nimport './App.css';\r\n\r\nimport fetchInstruments from './utils/instrumentsList';\r\n\r\nconst instrumentsList = fetchInstruments();\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst App = () => {\r\n  const [addInstrumentOpen, setAddInstrumentOpen] = useState(false);\r\n  const [currentTempo, setCurrentTempo] = useState(120);\r\n  const [instruments, setInstruments] = useState(instrumentsList.slice(0, 1));\r\n  const [playing, setPlaying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    updateTempo(currentTempo);\r\n  });\r\n  useEffect(() => {\r\n    // dbFunc.volume.value = 0;\r\n  }, []);\r\n\r\n  const play = () => {\r\n    if (playing) {\r\n      stopPlaying();\r\n      setPlaying(false);\r\n    } else {\r\n      startPlaying();\r\n      setPlaying(true);\r\n    }\r\n  };\r\n\r\n  const activateInstrument = instrument => {\r\n    const newInstrumentsList = [\r\n      ...instruments.filter(item => item.name !== instrument),\r\n      ...instrumentsList.filter(item => item.name === instrument),\r\n    ];\r\n    setInstruments(newInstrumentsList);\r\n  };\r\n\r\n  const removeInstrument = instrument => {\r\n    const newInstrumentsList = [\r\n      ...instruments.filter(item => item.name !== instrument),\r\n    ];\r\n    setInstruments(newInstrumentsList);\r\n  };\r\n\r\n  const activateKit = kit => {\r\n    const newInstrumentsList = [\r\n      ...instruments.filter(item => item.kit !== kit),\r\n      ...instrumentsList.filter(item => item.kit === kit),\r\n    ];\r\n    setInstruments(newInstrumentsList);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {addInstrumentOpen && (\r\n        <InstrumentSelector\r\n          cancel={() => setAddInstrumentOpen(false)}\r\n          add={instrument => {\r\n            if (instrument.instrument) {\r\n              activateInstrument(instrument.instrument);\r\n            }\r\n            if (instrument.kit) {\r\n              activateKit(instrument.kit);\r\n            }\r\n            setAddInstrumentOpen(false);\r\n          }}\r\n        />\r\n      )}\r\n      <div className=\"drum-cols\">\r\n        <div className=\"controls\">\r\n          <PlayButton text=\"Start / Stop\" play={play} playing={playing} />\r\n          <TempoSlider\r\n            tempo={currentTempo}\r\n            onchange={e => {\r\n              setCurrentTempo(e.target.value);\r\n              updateTempo(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        {instruments.map(instrument => (\r\n          <DrumGrid\r\n            key={instrument.name}\r\n            sound={instrument}\r\n            remove={removeInstrument}\r\n          />\r\n        ))}\r\n        <AddInstrument\r\n          onClick={() => {\r\n            setAddInstrumentOpen(true);\r\n          }}\r\n        />\r\n        <Footer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}